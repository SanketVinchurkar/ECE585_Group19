module top ();
initial begin
logic [6:0] way_states; //LRU bits
logic [7:0] ways;
int s;

s = update_LRU(8'b00100000,way_states);
$display("s = %7b",update_LRU(8'b00100000,way_states));
end
  
function byte update_LRU(input [7:0]ways, output [6:0]way_states); //updates LRU
begin
if (ways[0] == 1)
way_states[6:4] = 0;

else if(ways[1] == 1)
begin
way_states[6:5] = 2'b00;
way_states[4] = 1;
end

else if(ways[2] == 1)
begin
way_states[6] = 0;
way_states[5] = 1;
way_states[4] = 0;
end

else if(ways[3] == 1)
begin
way_states[6] = 0;
way_states[5:4] = 2'b11;
end

else if(ways[4] == 1)
begin
way_states[6] = 1;
way_states[5:4] = 2'b00;
end

else if(ways[5] == 1)
begin
way_states[6] = 1;
way_states[5] = 0;
way_states[4] = 1;
end

else if(ways[6] == 1)
begin
way_states[6:5] = 2'b11;
way_states[4] = 0;
end

else if (ways[7] == 1)
way_states[6:4] = 2'b11;

return way_states[6:0];

end
endfunction

function byte get_LRU(output [7:0]ways, input [6:0]way_states);
begin
if(way_states[6:4] == 0)
ways[7:0] = 1;

else if(way_states[6:5] == 0 && way_states[4] == 1)
ways[7:0] = 2;

else if(way_states[6] == 0 && way_states[5] == 1 && way_states[4] == 0)
ways[7:0] = 4;

else if(way_states[6] === 0 && way_states[5:4] == 1)
ways[7:0] = 8;

else if(way_states[6] == 1 && way_states[5:4] == 0)
ways[7:0] = 16;

else if(way_states[6] == 1 && way_states[5] == 0 && way_states[4] == 0)
ways[7:0] = 32;

else if(way_states[6:5] == 1 && way_states[4] == 0)
ways[7:0] = 64;

else if(way_states[6:4] == 1)
ways[7:0] = 128;

end
endfunction
endmodule
