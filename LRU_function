function byte update_LRU(input s[index].lc[j]); //updates LRU
begin
if (j == 0)
begin
s[index].PLRU[6:5] = 2'b00;
s[index].PLRU[3] = 0;
end

else if(j == 1)
begin
s[index].PLRU[6:5] = 2'b00;
s[index].PLRU[3] = 1;
end

else if(j == 2)
begin
s[index].PLRU[6] = 0;
s[index].PLRU[5] = 1;
s[index].PLRU[2] = 0;
end

else if(j == 3)
begin
s[index].PLRU[6] = 0;
s[index].PLRU[5] = 1;
s[index].PLRU[2] = 1;
end

else if(j == 4)
begin
s[index].PLRU[6] = 1;
s[index].PLRU[4] = 0;
s[index].PLRU[1] = 0;
end

else if(j == 5)
begin
s[index].PLRU[6] = 1;
s[index].PLRU[4] = 0;
s[index].PLRU[1] = 1;
end

else if(j == 6)
begin
s[index].PLRU[6] = 1;
s[index].PLRU[4] = 1;
s[index].PLRU[0] = 0;
end

else if (j == 7)
begin
s[index].PLRU[6] = 1;
s[index].PLRU[4] = 1;
s[index].PLRU[0] = 1;
end
end
endfunction

function byte get_LRU(input s[index].PLRU[6:0]);
begin


if(s[index].PLRU[6:5] == 2'b00 && s[index].PLRU[3]== 0)
j = 0;

else if(s[index].PLRU[6:5] == 2'b00 && v[3] == 1)
j = 1;

else if(s[index].PLRU[6] == 0 && s[index].PLRU[5] == 1 && s[index].PLRU[2] == 0)
j = 2;

else if(s[index].PLRU[6] == 0 && s[index].PLRU[5] == 1 && s[index].PLRU[2] == 1)
j = 3;

else if(s[index].PLRU[6] == 1 && s[index].PLRU[4] == 0 && s[index].PLRU[1] == 0)
j = 4;

else if(s[index].PLRU[6] == 1 && s[index].PLRU[4] == 0 && s[index].PLRU[1] == 1)
j = 5;

else if(s[index].PLRU[6] == 1 && s[index].PLRU[4] == 1 && s[index].PLRU[0] == 0)
j = 6;

else if(s[index].PLRU[6] == 1 && s[index].PLRU[4] == 1 && s[index].PLRU[0] == 1)
j = 7;

end
endfunction
endmodule
